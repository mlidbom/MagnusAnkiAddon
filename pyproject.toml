[project]
requires-python = ">=3.9"

[tool.ruff]
extend-exclude = ["_lib", "_lib_patched"]
line-length = 9999

[tool.ruff.lint]

select = [
    "E", # pycodestyle
    "W", # pycodestyle warnings
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort sorts imports etc
    "TC", # get's the correct imports into and out of TYPE_CHECKING blocks
    "ANN", # type annotations warnings
    "FA", # More type annotations fixes,
    "Q", #quoting style,
    "C4", # Comprehensions fixes
    "PT", # pytest style
    "RET", #return values
    "TID", # tidy imports
    "PERF", # performance
    "FURB", # refurbishing and modernizing Python codebases.
    "TRY", # proper exception use
    #"PGH", # yeah I should not be using noqa but instead specific ignores. Do look at this eventually..
    #"RUF", #ruff specific rules might be something interesting in here, but a ton of stull that I don't care about, or disagree with...
    # "PL", # pylint. Has some good advice, but way too many false positives for me to enable this now.
    #"PTH", apparently I'm doing paths all wrong. Might want to have a look sometime, for now it's all working and not under change.
]

isort.required-imports = ["from __future__ import annotations"] # since vital other warnings only appear if this line is there we want it in every file.

#select = ["ALL"]

flake8-pytest-style.parametrize-names-type = "csv"


ignore = [
    "E701", #E701 multiple statements on one line,
    "TC006", # [*] Add quotes to type expression in `typing.cast()`

    #below here is only needed when ALL is the select value
    #"Q", # rules on how quotes are use...
    "D", #Docstring rules
    "W292", # [*] No newline at end of file
    "PT003", #`scope='function'` is implied in `@pytest.fixture()` ... But I like being explicit. No need to remember the default
    "TRY003", #Avoid specifying long messages outside the exception class"
    "TRY002", #Create your own exception ... Not unless I need to catch it
]

[tool.pyright]
include=["src"]
exclude=["**/node_modules", "**/__pycache__", "**/.*", "src/MagnusAddon/_lib/", "**/_lib_patched/*", "**venv/*"]
extraPaths=["src/MagnusAddon"]
typeCheckingMode="recommended" # "off", "basic", "standard", "strict", "recommended", "all"

#todo: errors we should enable detection of ASAP
reportPrivateUsage =  "none"
reportUnknownMemberType =  "none"
reportUnknownArgumentType =  "none"
#reportAny = "none"
reportImportCycles =  "none"

#  "questionable if these are useful =  "",
reportUnusedExpression= "none"
reportUnusedCallResult = "none"

# we probably really don't need these
reportImplicitRelativeImport="none"
